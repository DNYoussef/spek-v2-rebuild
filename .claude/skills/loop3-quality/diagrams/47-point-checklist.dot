digraph FortySevenPoint_Checklist {
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start
    start [shape=ellipse, label="47-Point\nQuality Gate\nEntry", fillcolor=lightgreen];

    // Category 1: Backend Testing (12 points)
    subgraph cluster_backend {
        label="Category 1: Backend Testing (12 points)";
        fillcolor=lightblue;
        style=filled;

        backend_1 [label="1. All API endpoints tested"];
        backend_2 [label="2. Unit test coverage >=80%"];
        backend_3 [label="3. Integration tests pass"];
        backend_4 [label="4. Database migrations tested"];
        backend_5 [label="5. Error handling validated"];
        backend_6 [label="6. Authentication/authorization works"];
        backend_7 [label="7. Rate limiting tested"];
        backend_8 [label="8. WebSocket events validated"];
        backend_9 [label="9. Background jobs tested"];
        backend_10 [label="10. Cache invalidation works"];
        backend_11 [label="11. API versioning correct"];
        backend_12 [label="12. Logging/monitoring active"];
    }

    // Category 2: Frontend Testing (8 points)
    subgraph cluster_frontend {
        label="Category 2: Frontend Testing (8 points)";
        fillcolor=lightblue;
        style=filled;

        frontend_1 [label="13. Component tests pass"];
        frontend_2 [label="14. E2E tests pass (139)"];
        frontend_3 [label="15. Visual regression passed"];
        frontend_4 [label="16. Accessibility (a11y) validated"];
        frontend_5 [label="17. Mobile responsiveness tested"];
        frontend_6 [label="18. Browser compatibility checked"];
        frontend_7 [label="19. Performance metrics met"];
        frontend_8 [label="20. User flows validated"];
    }

    // Category 3: E2E Integration (7 points)
    subgraph cluster_e2e {
        label="Category 3: E2E Integration (7 points)";
        fillcolor=lightblue;
        style=filled;

        e2e_1 [label="21. Full user flows work"];
        e2e_2 [label="22. Backend + Frontend integration"];
        e2e_3 [label="23. Real-time updates work"];
        e2e_4 [label="24. Error states handled"];
        e2e_5 [label="25. Loading states work"];
        e2e_6 [label="26. Multi-user scenarios tested"];
        e2e_7 [label="27. Data consistency validated"];
    }

    // Category 4: Environment & Config (6 points)
    subgraph cluster_env {
        label="Category 4: Environment & Config (6 points)";
        fillcolor=lightblue;
        style=filled;

        env_1 [label="28. Environment variables set"];
        env_2 [label="29. Secrets properly managed"];
        env_3 [label="30. Database connections work"];
        env_4 [label="31. External APIs configured"];
        env_5 [label="32. Dependencies up-to-date"];
        env_6 [label="33. Build process successful"];
    }

    // Category 5: Performance (5 points)
    subgraph cluster_perf {
        label="Category 5: Performance (5 points)";
        fillcolor=lightblue;
        style=filled;

        perf_1 [label="34. Bundle size optimized (<10KB)"];
        perf_2 [label="35. API response time <200ms"];
        perf_3 [label="36. Page load time <2s"];
        perf_4 [label="37. Memory leaks checked"];
        perf_5 [label="38. Database query optimization"];
    }

    // Category 6: Security (4 points)
    subgraph cluster_security {
        label="Category 6: Security (4 points)";
        fillcolor=lightblue;
        style=filled;

        security_1 [label="39. Security scans pass (Bandit)"];
        security_2 [label="40. Input validation complete"];
        security_3 [label="41. XSS/CSRF protection active"];
        security_4 [label="42. Dependency vulnerabilities = 0"];
    }

    // Category 7: Code Quality (3 points)
    subgraph cluster_quality {
        label="Category 7: Code Quality (3 points)";
        fillcolor=lightblue;
        style=filled;

        quality_1 [label="43. NASA compliance >=92%"];
        quality_2 [label="44. TypeScript errors = 0"];
        quality_3 [label="45. ESLint errors = 0"];
    }

    // Category 8: Final Checks (2 points)
    subgraph cluster_final {
        label="Category 8: Final Checks (2 points)";
        fillcolor=lightblue;
        style=filled;

        final_1 [label="46. Theater detection score <60"];
        final_2 [label="47. Documentation complete"];
    }

    // Scoring Logic
    subgraph cluster_scoring {
        label="Scoring Logic";
        fillcolor=lightyellow;
        style=filled;

        calculate [label="Calculate Score:\nSum all passed checks"];
        score_decision [shape=diamond, label="Score?", fillcolor=yellow];
        score_47 [label="47/47\nPERFECT", fillcolor=green, fontcolor=white];
        score_46 [label="45-46/47\nCAUTION", fillcolor=yellow];
        score_45 [label="<45/47\nNO-GO", fillcolor=red, fontcolor=white];
    }

    // Outcomes
    outcome_go [shape=ellipse, label="GO\nProduction Ready", fillcolor=green, fontcolor=white];
    outcome_caution [shape=ellipse, label="CAUTION\nDocument & Accept", fillcolor=yellow];
    outcome_nogo [shape=ellipse, label="NO-GO\nEscalate to Loop 1", fillcolor=red, fontcolor=white];

    // Flow (simplified for visual clarity)
    start -> backend_1;
    backend_12 -> frontend_1;
    frontend_8 -> e2e_1;
    e2e_7 -> env_1;
    env_6 -> perf_1;
    perf_5 -> security_1;
    security_4 -> quality_1;
    quality_3 -> final_1;
    final_2 -> calculate;

    calculate -> score_decision;
    score_decision -> score_47 [label="47", color=green];
    score_decision -> score_46 [label="45-46", color=yellow];
    score_decision -> score_45 [label="<45", color=red];

    score_47 -> outcome_go;
    score_46 -> outcome_caution;
    score_45 -> outcome_nogo;

    // Critical Warning
    warning [shape=octagon, label="CRITICAL\nALL 47 points must be\nevaluated independently\nNo skipping allowed", fillcolor=orange];
    start -> warning [style=dashed];

    // Pass/Fail Visualization
    passfail [label="Pass/Fail per Point:\n✓ Pass = 1 point\n✗ Fail = 0 points\n\nMinimum thresholds:\n47 = Perfect (GO)\n45-46 = Acceptable (CAUTION)\n<45 = Unacceptable (NO-GO)", shape=note, fillcolor=lightyellow];

    // Metadata
    labelloc="t";
    label="47-Point Quality Gate Checklist\n\nCategories: Backend (12) + Frontend (8) + E2E (7) + Environment (6) + Performance (5) + Security (4) + Quality (3) + Final (2)\nScoring: All points evaluated independently, sum = final score\nDecision: 47 = GO, 45-46 = CAUTION, <45 = NO-GO";
    fontsize=14;
    fontname="Arial Bold";
}
